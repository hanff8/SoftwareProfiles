[General]
disable-udp-ports = 443
sni-sniffing = true
fast-switch = false
disconnect-on-policy-change = false
disable-stun = true
# IPv6 支持
ipv6 = false
# 跳过某个域名或者IP段
skip-proxy = 192.168.0.0/16,172.16.0.0/12,127.0.0.0/8,100.64.0.0/10,17.0.0.0/8,10.0.0.0/8,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# DNS 服务器，如果只在中国大陆境内使用，推荐删除 1.0.0.1 和 8.8.8.8 两个 DNS
dns-server = 1.0.0.1,8.8.8.8,119.29.29.29,223.5.5.5
doh-server = https://dns.alidns.com/dns-query
doh3-server = https://223.5.5.5/dns-query,https://223.6.6.6/dns-query
# Wi-Fi 访问
allow-udp-proxy = false
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socks5-port = 7221
# 网络测试 URL
proxy-test-url = http://cp.cloudflare.com/generate_204
test-timeout = 3
interface-mode = auto
# 指定 WiFi SSID 运行模式
## 下方写法表示一般 WiFi 和移动蜂窝网络下为自动分流模式 (rule), 名为 Stick 的 WiFi 下为DIRECT模式，名为 Stick-5G 的 WiFi 下为代理模式
ssid-trigger = "default":rule, "cellular":rule,"Stick":DIRECT,"Stick-5G":PROXY
# 使用真实 IP，可一定程度防止检测到使用代理
real-ip = *.lan, cable.auth.com, *.msftconnecttest.com, *.msftncsi.com, network-test.debian.org, detectportal.firefox.com, resolver1.opendns.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, stun.*, localhost.*.qq.com, *.logon.battlenet.com.cn, *.logon.battle.net, *.blzstatic.cn, *.cmpassport.com, id6.me, open.e.189.cn, mdn.open.wo.cn, auth.wosms.cn, *.jegotrip.com.cn, *.icitymobile.mobi, *.pingan.com.cn, *.cmbchina.com, *?miwifi.com, pool.ntp.org, *.pool.ntp.org, ntp.*.com, time.*.com, ntp?.*.com, time?.*.com, time.*.gov, time.*.edu.cn, *.ntp.org.cn, time.*.apple.com, PDC._msDCS.*.*, DC._msDCS.*.*, GC._msDCS.*.*
# 解析器
resource-parser = https://raw.githubusercontent.com/peng-ym/sub-store/master/backend/dist/sub-store-parser.loon.min.js

[Proxy]
Hf = WireGuard,interface-ip=172.16.0.2,interface-ipv6=2606:4700:110:8b7d:bdc4:a539:d843:14f0,private-key="ECITazNcj+UjyazAcuMK/xq1XTk0pY0o1KFtJ9cfa1Q=",mtu=1280,dns=1.1.1.1,dnsv6=2606:4700:4700::1111,keepalive=45,peers=[{public-key="bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=",allowed-ips="0.0.0.0/0,::0/0",endpoint=162.159.195.64:1074}]
# 内置 DIRECT、REJECT 策略
# 节点名称 = 协议，服务器地址，服务器端口，加密协议，密码


WARP3 = wireguard,interface-ip=104.21.31.247,interface-ipv6=2606:4700:110:88cd:1769:751c:6cb4:52d5,private-key="0I4Tq1EfpFLR2rjX+l7ZNxuUwERg3bb6a5IzfSCzSFg=",mtu=1280,dns=1.1.1.1,dnsv6=2606:4700:4700::1111,keepalive=45,peers=[{public-key="bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=",allowed-ips="0.0.0.0/0,::/0",endpoint=162.159.195.64:1074}]




[Remote Proxy]
快狗 = https://sub.store/download/%E5%BF%AB%E7%8B%97,udp=true,fast-open=true,vmess-aead=true,enabled=true
魔法学院 = https://sub.store/download/Magic%20School,udp=true,fast-open=true,vmess-aead=true,enabled=false
一元机场 = https://sub1.smallstrawberry.com/api/v1/client/subscribe?token=v82b7k5oordob5sucvabe6zb8d0xpsnh,udp=true,fast-open=true,vmess-aead=true,enabled=true
# 订阅节点，格式：别名 = 订阅 URL
# 以 Bywave 为例，Bywave 用户将下面订阅链接的 XXXXXX 替换为自己的订阅 token 即可
# 其他机场用户，注意修改别名（包括该配置文件下方所有 Bywave 字样）

[Remote Filter]
一元-us = NameKeyword,一元机场, FilterKey = "美国"
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# 根据自己机场及想用的节点进行删改，如想过滤 “香港 IPLC”，请修改 FilterKey 为 “.*香港 IPLC”
All = NameRegex, FilterKey = ".*"

HK = NameRegex, FilterKey = ".*(香港|Hong Kong|HK|hk)"
TW = NameRegex, FilterKey = ".*(台湾|Taiwan|TW|tw|台北)"
SG = NameRegex, FilterKey = ".*(新加坡|Singapore|SG|sg|狮城)"
JP = NameRegex, FilterKey = ".*(日本|Japan|JP|jp|东京)"
KR = NameRegex, FilterKey = ".*(韩国|Korea|KR|kr|首尔)"
US = NameRegex, FilterKey = ".*(美国|United States|US|us|新泽西|圣荷西|波特兰)"
UK = NameRegex, FilterKey = ".*(英国|United Kingdom|UK|uk|伦敦|爱尔兰)"
FR = NameRegex, FilterKey = ".*(法国|France|Fr|fr|巴黎)"
DE = NameRegex, FilterKey = ".*(德国|Germany|De|de|法兰克福)"


[Proxy Group]
连接 = select,Auto,Manual-Select,Proxychain
Proxychain = select,usproxychain,jpchain
yiyuanus = url-test,一元-us,url = http://cp.cloudflare.com/generate_204,interval = 3000,tolerance = 3600
Apple = select,DIRECT,Auto
openai = select,France,UnitedKingdom,German,UnitedStates,Japan,Singapore,Taiwan-China,HongKong,Proxychain
Auto = url-test,All,url = http://cp.cloudflare.com/generate_204,interval = 3000,tolerance = 3600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
Manual-Select = select,DIRECT,All,img-url = https://raw.githubusercontent.com/Orz-3/mini/master/Color/Manual.png
Mainland = select,DIRECT,Auto,Manual-Select,img-url = https://github.com/Koolson/Qure/raw/master/IconSet/Color/Direct.png
final = select,DIRECT,连接,Auto
TestFlight = select,DIRECT,Auto,Manual-Select,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TestFlight.png
Microsoft = select,DIRECT,Manual-Select,Taiwan-China,Singapore,HongKong,Japan,Korea,UnitedStates,UnitedKingdom,German,France,连接,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png
Netflix = select,DIRECT,Manual-Select,连接,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png
# 解锁节点 = select,DIRECT,网易解锁,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netease_Music_Unlock.png

TikTok = select,连接,Taiwan-China,Singapore,Japan,Korea,UnitedStates,German,UnitedKingdom,France,Auto,Proxychain,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TikTok.png
Spotify = select,DIRECT,Manual-Select,连接,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png

# country filter
HongKong = url-test,HK,url = http://cp.cloudflare.com/generate_204,interval = 3600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png
Taiwan-China = url-test,TW,url = http://cp.cloudflare.com/generate_204,interval = 3600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwan.png
Singapore = url-test,SG,url = http://cp.cloudflare.com/generate_204,interval = 3600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png
Japan = url-test,JP,url = http://cp.cloudflare.com/generate_204,interval = 3600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png
Korea = url-test,KR,url = http://cp.cloudflare.com/generate_204,interval = 3600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Korea.png
UnitedStates = url-test,US,url = http://cp.cloudflare.com/generate_204,interval = 3600,tolerance = 3600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png
German = url-test,DE,url = http://cp.cloudflare.com/generate_204,interval = 3600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Germany.png
UnitedKingdom = url-test,UK,url = http://cp.cloudflare.com/generate_204,interval = 3600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_Kingdom.png
France = url-test,FR,url = http://cp.cloudflare.com/generate_204,interval = 3600,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/France.png


# SSID 策略，格式：别名 = ssid，默认 = 策略， 蜂窝 = 策略，ssid名称 = 策略
#SSID = ssid, default = PROXY, cellular = PROXY, "Sophisticated" = DIRECT

[Proxy Chain]
jpchain = Hf,Japan, udp=true
usproxychain = Hf,UnitedStates, udp=true
[Rule]
# 本地规则
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
DOMAIN-KEYWORD,announce,DIRECT
DOMAIN-KEYWORD,torrent,DIRECT
DOMAIN-KEYWORD,tracker,DIRECT
DOMAIN-SUFFIX,smtp,DIRECT
URL-REGEX,(Subject|HELO|SMTP),DIRECT
# DOMAIN-SUFFIX,local,DIRECT
IP-CIDR,10.0.0.0/8,DIRECT,no-resolve
IP-CIDR,17.0.0.0/8,DIRECT,no-resolve
IP-CIDR,100.64.0.0/10,DIRECT,no-resolve
IP-CIDR,127.0.0.0/8,DIRECT,no-resolve
IP-CIDR,172.16.0.0/12,DIRECT,no-resolve
IP-CIDR,192.168.0.0/16,DIRECT,no-resolve
GEOIP,CN,DIRECT

FINAL,final

[Remote Rule]
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple_Domain.list, policy=Apple, tag=appledomain, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, policy=Apple, tag=apple, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaMax/ChinaMax_Domain.list, policy=Mainland, tag=ChinaMaxdomain, enabled=false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaMax/ChinaMax.list, policy=Mainland, tag=China Max, enabled=false
# 订阅规则、策略
# China


# 国内媒体分组，如需为某个规则列表单独设置策略，请直接修改 policy= 后的策略名称
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Loon/BiliBili/BiliBili_Resolve.list, policy=DIRECT, tag=BiliBili, enabled=true

# 国际媒体分组，如需为某个规则列表单独设置策略，请直接修改 policy= 后的策略名称
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Loon/Spotify/Spotify_Resolve.list, policy=Spotify, tag=Spotify, enabled=true

https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Loon/TestFlight/TestFlight.list, policy=TestFlight, tag=TF, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Loon/Microsoft/Microsoft.list, policy=Microsoft, tag=Microsoft, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Loon/Telegram/Telegram_Resolve.list, policy=Telegram, tag=Telegram, enabled=true
# https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Loon/PayPal/PayPal.list, policy=Global, tag=PayPal, enabled=true
https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Loon/TikTok/TikTok.list, policy=TikTok, tag=TikTok, enabled=true

# local
[Rewrite]
# 重写规则

[Host]
# 可以指定以下四种模式：
# 1. 指定域名使用对应的IP地址
# 2. 将域名指向另一个域名
# 3. 指定域名请求 DNS 时使用特定的 DNS 服务器，格式如下：
## google.com = server:8.8.8.8
## *.baidu.com = server:https://example.com/dns-query
## *.testflight.apple.com = server:8.8.4.4
# 4. 指定具体的 SSID 环境下使用特定的 DNS 服务器，格式如下：
## ssid:Stick = server:system

[Script]
# 脚本
# Display commodity historical price
# > JD - api.m.jd.com

# > Taobao - trade-acs.m.taobao.com

# Display Netflix ratings - ios.prod.ftl.netflix.com

# Weibo - api.weibo.cn, mapi.weibo.com, *.uve.weibo.com

[Remote Script]
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Fake_Vip.conf, tag=Fake-VIP, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Cookie.conf, tag=Cookie.获取完一定要关闭, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Task.conf, tag=Task, enabled=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Script.conf, tag=Script, enabled=false

[Plugin]
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.tf.plugin, policy=连接, enabled=true
https://raw.githubusercontent.com/DualSubs/YouTube/main/modules/DualSubs.YouTube.plugin, enabled=true
https://raw.githubusercontent.com/Keywos/rule/main/loon/TikTok.plugin, policy=TikTok, enabled=false
https://raw.githubusercontent.com/ClydeTime/BiliBili/main/modules/BiliBiliDailyBonus.plugin, enabled=true
https://raw.githubusercontent.com/chengkongyiban/Loon/main/Loon-Gallery/Rewrite_to_Loon.plugin, enabled=true
https://raw.githubusercontent.com/BiliUniverse/ADBlock/main/modules/BiliBili.ADBlock.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/Sub-Store.plugin, policy=连接, enabled=true
https://raw.githubusercontent.com/app2smile/rules/master/plugin/tieba.plugin, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/js/Mine/aDriveCheckIn/aDriveCheckIn.plugin, enabled=true
https://raw.githubusercontent.com/VirgilClyne/Cloudflare/main/plugin/Cloudflare.1.1.1.1.beta.plugin, enabled=true
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/js/Mine/aDriveCheckIn/aDriveCheckIn_token.plugin, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/LoonGallery.plugin, policy=Auto, enabled=true

# YouTube 字幕


# Tiktok unlock
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Unlock/TikTokUS.plugin, policy=TikTok, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Unlock/TikTokUK.plugin, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Unlock/TikTokTW.plugin, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Unlock/TikTokKR.plugin, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Unlock/TikTokJP.plugin, policy=TikTok, enabled=false

# TestFlight
https://raw.githubusercontent.com/NobyDa/Script/master/Loon/Loon_TF_Download.plugin, enabled=true
https://raw.githubusercontent.com/NobyDa/Script/master/Loon/Loon_TF_Account.plugin, enabled=true

# 流媒体解锁查询
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/MediaCheck.plugin, enabled=true

# 哔哩哔哩去广告

# YouTube ads
## planB

## planA
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/YouTube_remove_ads.plugin, enabled=false


# https://raw.githubusercontent.com/sub-store-org/Sub-Store/master/config/Loon.plugin, enabled=true
https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/Loon.plugin, tag=订阅解析器, enabled=false

#配合blackMatrix的去广告规则使用
# https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Loon/Advertising/Advertising_MITM.plugin, enable = true

[MITM]
# 请在正式使用前将其他已信任证书的 P12 及密码填入下方，并删掉 ca-p12 和 ca-passphrase 前的井号
# 或者前往设置界面生成、安装并信任新证书
hostname = api.m.jd.com,trade-acs.m.taobao.com,ios.prod.ftl.netflix.com,api.weibo.cn,mapi.weibo.com,*.uve.weibo.com
enable = true
skip-server-cert-verify = true
ca-p12 = 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
ca-passphrase = 51KV4J7H